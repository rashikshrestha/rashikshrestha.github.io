<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Knowledgebases on Rashik Shrestha</title>
    <link>http://rashik.info.np/knowledgebase/</link>
    <description>Recent content in Knowledgebases on Rashik Shrestha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>rashikshrestha01@gmail.com (Rashik Shrestha)</managingEditor>
    <webMaster>rashikshrestha01@gmail.com (Rashik Shrestha)</webMaster>
    <lastBuildDate>Tue, 05 Apr 2022 17:53:22 +0545</lastBuildDate>
    
	<atom:link href="http://rashik.info.np/knowledgebase/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>More on g&#43;&#43;</title>
      <link>http://rashik.info.np/knowledgebase/all_about_g&#43;&#43;/</link>
      <pubDate>Tue, 05 Apr 2022 17:53:22 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/all_about_g&#43;&#43;/</guid>
      <description>Introduction g++ is a tool for preprocessing, compilation, assembly and linking of source code to generate an executable file or library.
Installation As easy as:
sudo apt update
sudo apt install g++
General Syntax   General syntax to run g++ compiler is:
g++ &amp;lt;flags_with_params&amp;gt; &amp;lt;source_files&amp;gt;
  The above command takes a bunch of source files along with some flags and generates an executable file or a library file.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>http://rashik.info.np/knowledgebase/string/</link>
      <pubDate>Tue, 08 Mar 2022 11:15:27 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/string/</guid>
      <description>See https://stackoverflow.com/questions/19656025/why-is-char-on-the-stack-but-char-on-the-heap
Introduction  Just a group/arrary of characters. character here means char datatype of 1 byte. Terminated by NULL character. i.e ASCII value 0. Written as &#39;\0 in character form. Or 0 in int form.  char[]  Stores specified numbers of characters on Stack  char*  Stores specified numbers of characters on Heap and stores pointer to that memory in stack. But unlike other heap alocated memory, we don&amp;rsquo;t need to free the Heap memory using delete.</description>
    </item>
    
    <item>
      <title>const keyword</title>
      <link>http://rashik.info.np/knowledgebase/const_keyword/</link>
      <pubDate>Mon, 07 Mar 2022 07:37:29 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/const_keyword/</guid>
      <description>Use Cases  We basically have 3 use cases of const keyword:  Restrict the change in value of a Variable Restrict the change of Pointer Restrict the class method to change the variables of that class    Restrict the change in value of a Variable const int x = 7; x = 10; // ERROR, cannot change the value of x const int&amp;amp; p = 9; p = 10; // ERROR, cannot change the value of p const int* a = NULL; int val = 2; a = &amp;amp;val; // We can change the Pointer  *a = 10; // ERROR, But we canâ€™t change the contents of that Pointer Another way of writing:</description>
    </item>
    
    <item>
      <title>Pointers and References</title>
      <link>http://rashik.info.np/knowledgebase/pointers_and_references/</link>
      <pubDate>Sat, 05 Mar 2022 12:06:14 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/pointers_and_references/</guid>
      <description>Memory  In the context of this tutorial, memory is simply a place/register/space in our RAM where variables are stored.  Pointers Introduction  A pointer is just a Number (integer) that holds memory address of another variable. Size of this number/integer is not fixed. It depends upon OS, CPU architecture etc. For example, 4 bytes for 32 bit system and 8 bytes for 64 bit system. Adding &amp;amp; in front of a vaiable name gives the address in memory where that variable is stored in.</description>
    </item>
    
    <item>
      <title>Scope in C&#43;&#43;</title>
      <link>http://rashik.info.np/knowledgebase/scope_in_cpp/</link>
      <pubDate>Sat, 05 Mar 2022 09:41:57 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/scope_in_cpp/</guid>
      <description>#include &amp;lt;iostream&amp;gt; int main() { int x = 8; std::cout &amp;lt;&amp;lt; &amp;amp;x &amp;lt;&amp;lt; std::endl; int y = 4; std::cout &amp;lt;&amp;lt; &amp;amp;y &amp;lt;&amp;lt; std::endl; return 0; } Output
0x7ffce382f390 0x7ffce382f394 #include &amp;lt;iostream&amp;gt; int main() { { int x = 8; std::cout &amp;lt;&amp;lt; &amp;amp;x &amp;lt;&amp;lt; std::endl; } int y = 4; std::cout &amp;lt;&amp;lt; &amp;amp;y &amp;lt;&amp;lt; std::endl; return 0; } Output
0x7ffcaaa4a064 0x7ffcaaa4a064 </description>
    </item>
    
    <item>
      <title>Epipolar Geometry</title>
      <link>http://rashik.info.np/knowledgebase/epipolar_geometry/</link>
      <pubDate>Fri, 25 Feb 2022 22:16:14 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/epipolar_geometry/</guid>
      <description>Fundamental matrix song Has seven degrees of freedom&amp;hellip;. This is a fundamental matrix song!!</description>
    </item>
    
    <item>
      <title>How to compile C&#43;&#43; codes</title>
      <link>http://rashik.info.np/knowledgebase/compile_cpp_codes/</link>
      <pubDate>Wed, 23 Feb 2022 08:35:04 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/compile_cpp_codes/</guid>
      <description>C++ code compilers TO-DO
g++ vs gcc  g++ can compile any .c or .cpp files but they will be treated as C++ files only gcc can compile any .c or .cpp files but they will be treated as C and C++ respectively Using g++ to link the object files, files automatically links in the std C++ libraries. gcc does not do this.  Compilation Suppose we have simplest code in main.</description>
    </item>
    
    <item>
      <title>ML model visualization using Netron</title>
      <link>http://rashik.info.np/knowledgebase/ml_model_visualization_using_netron/</link>
      <pubDate>Tue, 22 Feb 2022 13:29:41 +0545</pubDate>
      <author>rashikshrestha01@gmail.com (Rashik Shrestha)</author>
      <guid>http://rashik.info.np/knowledgebase/ml_model_visualization_using_netron/</guid>
      <description>1. Intro  Netron is really great tool to visualize the ML models. ONNX (Open Neural Network Exchange Format) is a format designed to represent any type of Machine Learning and Deep Learning models. Pytorch and Tensorflow can export the model in onnx format. This onnx file can then be read with Netron to visualize the model graphically.  2. Installation As simple as:
pip install netron 3. Barebone code import torch import torch.</description>
    </item>
    
  </channel>
</rss>